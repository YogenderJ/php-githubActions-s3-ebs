name: php -> s3 -> Elastic Beanstalk
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

#Setting up ssome environment variables
env:    
  EB_PACAKAGE_S3_BUCKET_NAME: "yog.net1"
  EB_APPLICATION_NAME       : "php-app"
  EB_ENVIRONMENT_NAME       : "Phpapp-env"
#  DEPLOY_PACAKAGE_NAME      : "php-app-${{ github.sha }}.zip"
  DEPLOY_PACAKAGE_NAME      : "php-app.zip"
  AWS_REGION_NAME           : "us-west-1"
  

jobs:
  build_and_create_Artifact:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: 'Make zip file'
        run: |
          zip ${{ env.DEPLOY_PACAKAGE_NAME }} index.html
          ls
        # -r = recursively, ./=current directory, -x = exclude
        #run: zip -r ${{ env.DEPLOY_PACAKAGE_NAME }} ./ -x *.git*
        
      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           aws-region: ${{ env.AWS_REGION_NAME }}
           
      - name: "Copy artifact to S3"     
        run: aws s3 cp ${{ env.DEPLOY_PACAKAGE_NAME }} s3://${{ env.EB_PACAKAGE_S3_BUCKET_NAME }}/
           
      - name: "Build Successful"
        run: echo "CD part completed successfully"
      
  Deploy_Artifact:
    needs: build_and_create_Artifact
    runs-on: ubuntu-latest
    steps: 
     - name: "Configure AWS Credentials"
       uses: aws-actions/configure-aws-credentials@v1
       with:
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           aws-region: ${{ env.AWS_REGION_NAME }}
 #aws elasticbeanstalk create-application-version --application-name my-app --version-label v1 --source-bundle S3Bucket=DOC-EXAMPLE-BUCKET,S3Key=my-source-bundle.zip
     - name: "Create Elastic Beanstalk Application Version"
       run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --version-label "version@${{ github.sha }}" \
          --source-bundle S3Bucket="${{ env.EB_PACAKAGE_S3_BUCKET_NAME }}", S3Key="${{ env.DEPLOY_PACAKAGE_NAME }}" \
          --description "SHA of app is ${{ github.sha }}"
          
     - name: "Deploy Application Version"
       run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "version@${{ github.sha }}"
       
     - name: "Successfully run CD pipeline"
       run: echo "CD part completed successfully"
